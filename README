galapix - A Zoomable Image Viewer zoomview 
==========================================

galapix is an JPEG image viewer that allows you to directly zoom into
large collection of tens of thousand of images from tiny thumbnails
down to the images original size fluently with short load times and no
loss of interactivity. It accomplishes this by keeping a tile cache
which stores not only thumbnails for one size, but thumbnails of many
different sizes. This thumbnail cache requires at maximum 1.5x times
as much storage as the images themselves.

galapix can also be used to view gigapixel sized images, it however
currently requires the tiles for that to be generated previously,
which can take quite a bit of time and memory.

galapix is currently limited to JPEG files, no other fileformat is
currently supported.


Required Libraries and Tools:
=============================

  * SQlite  - http://www.sqlite.org/
  * libjpeg - http://www.ijg.org/
  * scons   - http://www.scons.org/ 
  * OpenGL  - http://www.opengl.org 
  * GLEW    - http://glew.sourceforge.net/

On Ubuntu you have to do a:

apt-get install \
  libsqlite3-dev \
  libglew1.5-dev \
  libjpeg62-dev \
  scons

And make sure you have OpenGL up and running. For other distributions
library names might be a little different, but all the required
libraries should be part of most distributions.


Compilation:
============

The easiest way to compile is to type:

 scons

The rest should happen automatically.

If you want to customize compiler options or other stuff you can do that
by running:
  
 scons configure [VARS]...

To get a list of available variables use:

 scons -h

If the configure stage gives you problems even so you think have
everything installed try:

 scons configure ignore_errors="True"

A look at "config.log" might also prove useful in tracking the problem
done more.


Running:
========

galapix comes with a number of sub commands, allowing the user to either
view images or pre generate thumbnails. The most basic command is:

 ./galapix view [FILES]...

Which display the given files. To pregenerate only the small
thumbnails you use:

 ./galapix thumbgen [FILES]...

To generate not only the small thumbnails, but all tiles you use:

 ./galapix prepare [FILES]...

The other available commands are mostly for debugging and have little
actualy use.

When you do not supply a list of files galapix will display all files in
the database.

Via the -d flag you can specifiy a database, so that you can have
different databases for different files. If you give an empty string
-d "" no database file will be created, the database will resist in
memory only.


Keyboard Commands:
===================

Key       | Function
----------+------------------------------
F11       | toggle fullscreen
t         | toggle trackball mode (mouse is grabbed and cursor hidden)
1 	  | layout images 4:3
2 	  | layout images 16:9
3 	  | random layout
4         | relayout images in a non-overlapping form
7         | scale selection down
8         | scale selection up
g 	  | toggle grid
h         | reset zoom and scroll
m         | switch to move/resize tools
p         | switch pan/zoom tools
b         | toggle background color
i         | only display selected images, remove the rest
n         | random shuffle images (not visible until layout it done via 1 or 2)
s         | sort images alphabetically  (not visible until layout it done via 1 or 2)
page up   | increase gamma
page down | increase gamma
space     | print the currently visible images to stdout 
delete    | remove selected images from workspace
home      | zoom in
end       | zoom out
shift     | rotate the view by moving the mouse while shift is hold down
left      | rotate the view 90
right     | rotate the view -90
up        | reset view rotation to 0 degree
escape    | exit galapix

SpaceNavigator Support:
=======================

galapix supports the Space Navigator via the Open Source spacenavd daemon:

 * http://spacenav.sourceforge.net

The 3Dconnexion's official 3dxsrv daemon is not supported, neither is
directly reading from /dev/input/eventX.


Issues:
=======

* Galapix is very picky about IO, so if you have updatedb running
  around in the background or other indexing software, it gets
  extremely slow.

* Incremental loading is not fully optimized, so you see more
  artifacts then you should.

* Running multiple instances of galapix at once can lead to:

terminate called after throwing an instance of 'SQLiteError'
  what():  SQLiteStatement::~SQLiteStatement: column filename is not unique
Aborted


# EOF #
